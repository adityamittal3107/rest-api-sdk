# -*- coding: utf-8 -*-

"""
restapisdk

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class ApiRestV2MetadataDetailsRequest(object):

    """Implementation of the 'Api Rest V2 Metadata Details Request' model.

    TODO: type model description here.

    Attributes:
        mtype (Type9Enum): Type of the metadata object being searched. Valid
            values
        id (list of string): A JSON array of GUIDs of the objects.
        show_hidden (bool): When set to true, returns details of the hidden
            objects, such as a column in a worksheet or a table.
        drop_question_details (bool): When set to true, the search assist data
            associated with a worksheet is not included in the API response.
            This attribute is applicable only for LOGICAL_TABLE data type.
        version (string): Specify the version to retrieve the objects from. By
            default, the API returns metadata for all versions of the object.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "mtype": 'type',
        "id": 'id',
        "show_hidden": 'showHidden',
        "drop_question_details": 'dropQuestionDetails',
        "version": 'version'
    }

    def __init__(self,
                 mtype=None,
                 id=None,
                 show_hidden=False,
                 drop_question_details=False,
                 version=None):
        """Constructor for the ApiRestV2MetadataDetailsRequest class"""

        # Initialize members of the class
        self.mtype = mtype
        self.id = id
        self.show_hidden = show_hidden
        self.drop_question_details = drop_question_details
        self.version = version

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        mtype = dictionary.get('type')
        id = dictionary.get('id')
        show_hidden = dictionary.get("showHidden") if dictionary.get("showHidden") else False
        drop_question_details = dictionary.get("dropQuestionDetails") if dictionary.get("dropQuestionDetails") else False
        version = dictionary.get('version')

        # Return an object of this model
        return cls(mtype,
                   id,
                   show_hidden,
                   drop_question_details,
                   version)

    @classmethod
    def validate(cls, val):
        """Validates value against class schema

        Args:
            val: the value to be validated

        Returns:
            boolean : if value is valid against schema.

        """
        return SchemaValidatorWrapper.getValidator(APIHelper.get_schema_path(os.path.abspath(__file__))).is_valid(val)
